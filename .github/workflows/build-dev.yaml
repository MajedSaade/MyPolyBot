# .github/workflows/build-dev.yaml
name: Polybot Build Dev

on:
  push:
    branches:
      - dev
      - feature/dev_setup
      - feature/monitoring_dev_setup
      - feature/containerization
  workflow_dispatch:

jobs:
  Build:
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.build.outputs.image }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build and Push Docker Image
        id: build
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
        run: |
          # Login to Docker Hub
          echo "$DOCKERHUB_TOKEN" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
          
          # Create image name with run number
          IMG_NAME="$DOCKERHUB_USERNAME/polybot-dev:${{ github.run_number }}"
          echo "Building image: $IMG_NAME"
          
          # Verify Dockerfile exists
          if [ ! -f "Dockerfile" ]; then
            echo "ERROR: Dockerfile not found in repository root"
            ls -la
            exit 1
          fi
          
          echo "Found Dockerfile, contents preview:"
          head -10 Dockerfile
          
          # Build the Docker image
          echo "Starting Docker build..."
          docker build --build-arg ENVIRONMENT=development -t "$IMG_NAME" . --progress=plain
          
          # Verify the image was built
          echo "Verifying built image:"
          docker images | grep polybot-dev || echo "WARNING: Image not found in local images"
          docker inspect "$IMG_NAME" --format='{{.Id}}' || echo "WARNING: Cannot inspect image"
          
          # Test the image can run (basic test)
          echo "Testing image can start:"
          docker run --rm "$IMG_NAME" --help 2>/dev/null || echo "WARNING: Image test failed (this might be normal)"
          
          # Push the image
          echo "Pushing image to Docker Hub..."
          docker push "$IMG_NAME"
          
          # Verify push was successful
          echo "Verifying push was successful:"
          docker pull "$IMG_NAME"
          
          # Output the image name for the next job
          echo "image=$IMG_NAME" >> $GITHUB_OUTPUT
          echo "âœ… Successfully built and pushed image: $IMG_NAME"
          
          # Debug: Show what we're passing to the next job
          echo "DEBUG: GITHUB_OUTPUT contents:"
          cat $GITHUB_OUTPUT

  Deploy:
    needs: Build
    uses: ./.github/workflows/deploy-dev.yaml
    with:
      image: ${{ needs.Build.outputs.image }}
    secrets:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
      EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
      POLYBOT_EC2_HOST_DEV: ${{ secrets.POLYBOT_EC2_HOST_DEV }}
      EC2_USERNAME: ${{ secrets.EC2_USERNAME }}
      DISCORD_BOT_TOKEN_DEV: ${{ secrets.DISCORD_BOT_TOKEN_DEV }}